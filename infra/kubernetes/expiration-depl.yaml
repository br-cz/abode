# #api version = this tells k8s which version of k8s objects we want it to look it
# #apps/v1 means the deployment will be inside the obj called apps/v1

# #kind = what kind of object to create

# #metadata = config options for the object we're going to create
# #name of deployment

# #spec = the exact attributes we apply to the object we're going to create
# #replicas: the number of pods that we want to create running a specific image
# #selector: allows us to select pods with certain properties
# #matchLabels: tells K8s to look at all the different pods that have been created
# #and manage the ones with the label of app: posts, a key-value pair
# #template: where we specify the exact configuration of a pod that we want the deployment to create
# #the below is some configuration that will be applied to all pods created by the deployment
# #tells deployment to make a pod with label app:posts
# #containers = we can create many containers in a single pod
# #the "-" signifies an element to create for the array of pods
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expiration-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expiration
  template:
    metadata:
      labels:
        app: expiration
    spec:
      containers:
        - name: expiration
          image: us.gcr.io/abode-360117/expiration
          env:
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name #identify expiration service running
            - name: NATS_CLUSTER_ID
              value: abode
            - name: NATS_URL
              value: 'https://nats-srv:4222'
            - name: REDIS_HOST #tell this depl how to connect to redis
              value: expiration-redis-srv #from expiration-redis-depl
#this service has no need to connect with other services so don't need  a service for it w ports
